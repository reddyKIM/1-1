name: Deploy Astro to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Configure Pages
        id: configure-pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: astro
          enablement: true
        continue-on-error: true
      - name: Ensure Pages is enabled
        if: steps.configure-pages.outcome == 'failure'
        run: |
          echo "::error::자동 프로비저닝 권한이 없어 GitHub Pages 설정을 완료하지 못했습니다."
          echo "::error::Settings → Pages에서 Source를 GitHub Actions로 지정해 사이트를 한 번 수동으로 활성화해 주세요."
          exit 1
      - name: Validate Pages site availability
        if: steps.configure-pages.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
        run: |
          set -euo pipefail
          status=$(curl -sS \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -o /tmp/pages.json \
            -w "%{http_code}" \
            "https://api.github.com/repos/${REPOSITORY}/pages")
          if [ "$status" != "200" ]; then
            echo "::error::GitHub Pages 사이트 정보를 조회하지 못했습니다(status=${status}). Settings → Pages에서 Source를 GitHub Actions로 설정했는지 확인해 주세요."
            cat /tmp/pages.json || true
            exit 1
          fi
      - name: Generate lockfile when missing
        if: ${{ hashFiles('package-lock.json') == '' }}
        run: npm install --package-lock-only
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
      - name: Build
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
